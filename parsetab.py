
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftNOTNOT2leftMASMENOSleftPORDIVleftANDORRESIDUOXORleftAND2OR2DESPLAZAMIENTOIZQXOR2DESPLAZAMIENTODERleftIGUALIGUALDIFERENTEMAYORIGUALMENORIGUALMAYORMENORrightUMENOSABS AND AND2 ARRAY CADENA CHAR CORCHETEDER CORCHETEIZQ DECIMAL DESPLAZAMIENTODER DESPLAZAMIENTOIZQ DIFERENTE DIV DOSPUNTOS ENTERO ETIQUETA EXIT FLOAT GOTO ID IF IGUAL IGUALIGUAL INT MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS NOT NOT2 OR OR2 PARDERECHO PARIZQUIERDO POR PRINT PUNTOYCOMA READ RESIDUO UNSET XOR XOR2inicio               : ETIQUETA DOSPUNTOS instrucciones inicioinicio               : ETIQUETA DOSPUNTOS instruccionesinstrucciones    : instrucciones instruccion instrucciones    : instruccion instruccion      : imprimir\n                        | salto\n                        | salida\n                        | instruccion_if\n                        | asignacion\n                        | destruirsalida             : EXIT PUNTOYCOMAsalto             : GOTO ETIQUETA PUNTOYCOMAdestruir          : UNSET PARIZQUIERDO ID PARDERECHO PUNTOYCOMAimprimir     : PRINT PARIZQUIERDO final PARDERECHO PUNTOYCOMAinstruccion_if     : IF PARIZQUIERDO relacional PARDERECHO GOTO ETIQUETA PUNTOYCOMAasignacion         : ID IGUAL operacion PUNTOYCOMAoperacion        : conversion\n                        | aritmetica\n                        | logica\n                        | bit\n                        | relacional\n                        | finalconversion         : PARIZQUIERDO INT PARDERECHO final\n                          | PARIZQUIERDO FLOAT PARDERECHO final\n                          | PARIZQUIERDO CHAR PARDERECHO finalaritmetica         : final MAS final\n                          | final MENOS final\n                          | final POR final\n                          | final DIV final\n                          | final RESIDUO finalaritmetica           : ABS PARIZQUIERDO final PARDERECHOlogica             : final AND final\n                          | final OR final\n                          | final XOR finallogica               : NOT finalbit                : final AND2 final\n                          | final OR2 final\n                          | final XOR2 final\n                          | final DESPLAZAMIENTOIZQ final\n                          | final DESPLAZAMIENTODER finalbit                  : NOT2 finalrelacional         : final IGUALIGUAL final\n                          | final DIFERENTE final\n                          | final MAYORIGUAL final\n                          | final MENORIGUAL final\n                          | final MAYOR final\n                          | final MENOR finalfinal              : DECIMAL\n                          | ENTEROfinal              : IDfinal : MENOS final %prec UMENOSfinal              : READ PARIZQUIERDO PARDERECHOfinal              : ARRAY PARIZQUIERDO PARDERECHOfinal              : CADENA'
    
_lr_action_items = {'ETIQUETA':([0,4,5,6,7,8,9,10,11,13,19,22,34,60,81,84,108,114,],[2,2,-4,-5,-6,-7,-8,-9,-10,21,-3,-11,-12,-16,-14,109,-13,-15,]),'$end':([1,4,5,6,7,8,9,10,11,18,19,22,34,60,81,108,114,],[0,-2,-4,-5,-6,-7,-8,-9,-10,-1,-3,-11,-12,-16,-14,-13,-15,]),'DOSPUNTOS':([2,],[3,]),'PRINT':([3,4,5,6,7,8,9,10,11,19,22,34,60,81,108,114,],[12,12,-4,-5,-6,-7,-8,-9,-10,-3,-11,-12,-16,-14,-13,-15,]),'GOTO':([3,4,5,6,7,8,9,10,11,19,22,34,53,60,81,108,114,],[13,13,-4,-5,-6,-7,-8,-9,-10,-3,-11,-12,84,-16,-14,-13,-15,]),'EXIT':([3,4,5,6,7,8,9,10,11,19,22,34,60,81,108,114,],[14,14,-4,-5,-6,-7,-8,-9,-10,-3,-11,-12,-16,-14,-13,-15,]),'IF':([3,4,5,6,7,8,9,10,11,19,22,34,60,81,108,114,],[15,15,-4,-5,-6,-7,-8,-9,-10,-3,-11,-12,-16,-14,-13,-15,]),'ID':([3,4,5,6,7,8,9,10,11,19,20,22,23,24,25,30,34,46,47,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,77,81,104,105,106,108,114,],[16,16,-4,-5,-6,-7,-8,-9,-10,-3,29,-11,29,29,48,29,-12,29,29,29,29,29,29,29,29,-16,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-14,29,29,29,-13,-15,]),'UNSET':([3,4,5,6,7,8,9,10,11,19,22,34,60,81,108,114,],[17,17,-4,-5,-6,-7,-8,-9,-10,-3,-11,-12,-16,-14,-13,-15,]),'PARIZQUIERDO':([12,15,17,24,31,32,45,],[20,23,25,44,51,52,77,]),'PUNTOYCOMA':([14,21,27,28,29,33,37,38,39,40,41,42,43,49,50,78,79,80,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,109,110,111,112,113,],[22,34,-48,-49,-50,-54,60,-17,-18,-19,-20,-21,-22,81,-51,-35,-41,108,-52,-53,-42,-43,-44,-45,-46,-47,-26,-27,-28,-29,-30,-32,-33,-34,-36,-37,-38,-39,-40,114,-23,-24,-25,-31,]),'IGUAL':([16,],[24,]),'DECIMAL':([20,23,24,30,46,47,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,77,104,105,106,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ENTERO':([20,23,24,30,46,47,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,77,104,105,106,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'MENOS':([20,23,24,27,28,29,30,33,43,46,47,50,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,77,82,83,104,105,106,],[30,30,30,-48,-49,-50,30,-54,62,30,30,-51,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-52,-53,30,30,30,]),'READ':([20,23,24,30,46,47,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,77,104,105,106,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'ARRAY':([20,23,24,30,46,47,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,77,104,105,106,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CADENA':([20,23,24,30,46,47,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,77,104,105,106,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ABS':([24,],[45,]),'NOT':([24,],[46,]),'NOT2':([24,],[47,]),'PARDERECHO':([26,27,28,29,33,35,48,50,51,52,74,75,76,82,83,85,86,87,88,89,90,107,],[49,-48,-49,-50,-54,53,80,-51,82,83,104,105,106,-52,-53,-42,-43,-44,-45,-46,-47,113,]),'IGUALIGUAL':([27,28,29,33,36,43,50,82,83,],[-48,-49,-50,-54,54,54,-51,-52,-53,]),'DIFERENTE':([27,28,29,33,36,43,50,82,83,],[-48,-49,-50,-54,55,55,-51,-52,-53,]),'MAYORIGUAL':([27,28,29,33,36,43,50,82,83,],[-48,-49,-50,-54,56,56,-51,-52,-53,]),'MENORIGUAL':([27,28,29,33,36,43,50,82,83,],[-48,-49,-50,-54,57,57,-51,-52,-53,]),'MAYOR':([27,28,29,33,36,43,50,82,83,],[-48,-49,-50,-54,58,58,-51,-52,-53,]),'MENOR':([27,28,29,33,36,43,50,82,83,],[-48,-49,-50,-54,59,59,-51,-52,-53,]),'MAS':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,61,-51,-52,-53,]),'POR':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,63,-51,-52,-53,]),'DIV':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,64,-51,-52,-53,]),'RESIDUO':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,65,-51,-52,-53,]),'AND':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,66,-51,-52,-53,]),'OR':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,67,-51,-52,-53,]),'XOR':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,68,-51,-52,-53,]),'AND2':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,69,-51,-52,-53,]),'OR2':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,70,-51,-52,-53,]),'XOR2':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,71,-51,-52,-53,]),'DESPLAZAMIENTOIZQ':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,72,-51,-52,-53,]),'DESPLAZAMIENTODER':([27,28,29,33,43,50,82,83,],[-48,-49,-50,-54,73,-51,-52,-53,]),'INT':([44,],[74,]),'FLOAT':([44,],[75,]),'CHAR':([44,],[76,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,4,],[1,18,]),'instrucciones':([3,],[4,]),'instruccion':([3,4,],[5,19,]),'imprimir':([3,4,],[6,6,]),'salto':([3,4,],[7,7,]),'salida':([3,4,],[8,8,]),'instruccion_if':([3,4,],[9,9,]),'asignacion':([3,4,],[10,10,]),'destruir':([3,4,],[11,11,]),'final':([20,23,24,30,46,47,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,77,104,105,106,],[26,36,43,50,78,79,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,110,111,112,]),'relacional':([23,24,],[35,42,]),'operacion':([24,],[37,]),'conversion':([24,],[38,]),'aritmetica':([24,],[39,]),'logica':([24,],[40,]),'bit':([24,],[41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> ETIQUETA DOSPUNTOS instrucciones inicio','inicio',4,'p_inicio','gramaticaAscendente.py',186),
  ('inicio -> ETIQUETA DOSPUNTOS instrucciones','inicio',3,'p_inicio_b','gramaticaAscendente.py',212),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramaticaAscendente.py',220),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramaticaAscendente.py',229),
  ('instruccion -> imprimir','instruccion',1,'p_instruccion','gramaticaAscendente.py',236),
  ('instruccion -> salto','instruccion',1,'p_instruccion','gramaticaAscendente.py',237),
  ('instruccion -> salida','instruccion',1,'p_instruccion','gramaticaAscendente.py',238),
  ('instruccion -> instruccion_if','instruccion',1,'p_instruccion','gramaticaAscendente.py',239),
  ('instruccion -> asignacion','instruccion',1,'p_instruccion','gramaticaAscendente.py',240),
  ('instruccion -> destruir','instruccion',1,'p_instruccion','gramaticaAscendente.py',241),
  ('salida -> EXIT PUNTOYCOMA','salida',2,'p_salida','gramaticaAscendente.py',248),
  ('salto -> GOTO ETIQUETA PUNTOYCOMA','salto',3,'p_salto','gramaticaAscendente.py',254),
  ('destruir -> UNSET PARIZQUIERDO ID PARDERECHO PUNTOYCOMA','destruir',5,'p_destruir','gramaticaAscendente.py',260),
  ('imprimir -> PRINT PARIZQUIERDO final PARDERECHO PUNTOYCOMA','imprimir',5,'p_imprimir_instruccion','gramaticaAscendente.py',266),
  ('instruccion_if -> IF PARIZQUIERDO relacional PARDERECHO GOTO ETIQUETA PUNTOYCOMA','instruccion_if',7,'p_instruccion_if','gramaticaAscendente.py',272),
  ('asignacion -> ID IGUAL operacion PUNTOYCOMA','asignacion',4,'p_asignacion','gramaticaAscendente.py',278),
  ('operacion -> conversion','operacion',1,'p_operacion','gramaticaAscendente.py',287),
  ('operacion -> aritmetica','operacion',1,'p_operacion','gramaticaAscendente.py',288),
  ('operacion -> logica','operacion',1,'p_operacion','gramaticaAscendente.py',289),
  ('operacion -> bit','operacion',1,'p_operacion','gramaticaAscendente.py',290),
  ('operacion -> relacional','operacion',1,'p_operacion','gramaticaAscendente.py',291),
  ('operacion -> final','operacion',1,'p_operacion','gramaticaAscendente.py',292),
  ('conversion -> PARIZQUIERDO INT PARDERECHO final','conversion',4,'p_conversion','gramaticaAscendente.py',298),
  ('conversion -> PARIZQUIERDO FLOAT PARDERECHO final','conversion',4,'p_conversion','gramaticaAscendente.py',299),
  ('conversion -> PARIZQUIERDO CHAR PARDERECHO final','conversion',4,'p_conversion','gramaticaAscendente.py',300),
  ('aritmetica -> final MAS final','aritmetica',3,'p_aritmetica','gramaticaAscendente.py',315),
  ('aritmetica -> final MENOS final','aritmetica',3,'p_aritmetica','gramaticaAscendente.py',316),
  ('aritmetica -> final POR final','aritmetica',3,'p_aritmetica','gramaticaAscendente.py',317),
  ('aritmetica -> final DIV final','aritmetica',3,'p_aritmetica','gramaticaAscendente.py',318),
  ('aritmetica -> final RESIDUO final','aritmetica',3,'p_aritmetica','gramaticaAscendente.py',319),
  ('aritmetica -> ABS PARIZQUIERDO final PARDERECHO','aritmetica',4,'p_aritmetica_abs','gramaticaAscendente.py',342),
  ('logica -> final AND final','logica',3,'p_logica','gramaticaAscendente.py',349),
  ('logica -> final OR final','logica',3,'p_logica','gramaticaAscendente.py',350),
  ('logica -> final XOR final','logica',3,'p_logica','gramaticaAscendente.py',351),
  ('logica -> NOT final','logica',2,'p_logica_not','gramaticaAscendente.py',366),
  ('bit -> final AND2 final','bit',3,'p_bit','gramaticaAscendente.py',372),
  ('bit -> final OR2 final','bit',3,'p_bit','gramaticaAscendente.py',373),
  ('bit -> final XOR2 final','bit',3,'p_bit','gramaticaAscendente.py',374),
  ('bit -> final DESPLAZAMIENTOIZQ final','bit',3,'p_bit','gramaticaAscendente.py',375),
  ('bit -> final DESPLAZAMIENTODER final','bit',3,'p_bit','gramaticaAscendente.py',376),
  ('bit -> NOT2 final','bit',2,'p_bit_not','gramaticaAscendente.py',399),
  ('relacional -> final IGUALIGUAL final','relacional',3,'p_relacional','gramaticaAscendente.py',405),
  ('relacional -> final DIFERENTE final','relacional',3,'p_relacional','gramaticaAscendente.py',406),
  ('relacional -> final MAYORIGUAL final','relacional',3,'p_relacional','gramaticaAscendente.py',407),
  ('relacional -> final MENORIGUAL final','relacional',3,'p_relacional','gramaticaAscendente.py',408),
  ('relacional -> final MAYOR final','relacional',3,'p_relacional','gramaticaAscendente.py',409),
  ('relacional -> final MENOR final','relacional',3,'p_relacional','gramaticaAscendente.py',410),
  ('final -> DECIMAL','final',1,'p_final','gramaticaAscendente.py',437),
  ('final -> ENTERO','final',1,'p_final','gramaticaAscendente.py',438),
  ('final -> ID','final',1,'p_final_id','gramaticaAscendente.py',444),
  ('final -> MENOS final','final',2,'p_artimetica_negativo','gramaticaAscendente.py',450),
  ('final -> READ PARIZQUIERDO PARDERECHO','final',3,'p_final_read','gramaticaAscendente.py',466),
  ('final -> ARRAY PARIZQUIERDO PARDERECHO','final',3,'p_final_array','gramaticaAscendente.py',473),
  ('final -> CADENA','final',1,'p_final_cadena','gramaticaAscendente.py',478),
]
